Adrianna's dropdown
southeast = ("FL", "GA", "NC")


region =
NE
SE
SW
NW

southeast = ['FL', 'AL']

if region == 'SE':
  loop through every row,
  look at the state in that row
  if the state is in southeast (the list),
  print that row in the HTML


need writer.writeheader() to create headings so that you can later call the data in the app.


Gets a NY school:
def NY(source):
    for row in source:
        location = row["State"]
        c_team = row["School"]
        c_coach = row["Coach"]
        if location == "NY":
            c_team = row["School"]
            c_coach = row["Coach"]
            return location, c_team, c_coach

well = NY(schools_list)
print(well)

Get FL? schools?
def list_schools(source):
    #locations = []
    for row in source:
        location = row["State"]
        c_team = row["School"]
        c_coach = row["Coach"]
        if location == "FL":
            c_team = row["School"]
            c_coach = row["Coach"]
            return location, c_team, c_coach



            <li><a href="#">Action</a></li>
            <li><a href="#">Another action</a></li>
            <li><a href="#">Something else here</a></li>
            <li role="separator" class="divider"></li>
            <li><a href="#">Separated link</a></li>



pick a region from a list, calls next route

in bootstrap: code columns that you can code an infinite number and no matter how narrow and wide it will maintain
Column wrapping
check out github link in blog post on site

don't need lines 1 - 49, look at flask -bootstrap documentation


# state_list here should be only one state, not a list , so you can match
# that to state in one row
# get all rows that have that state

#for state in regions[key]:
      #    print(state)
#state, team, coach = state_info(schools_list, state)
#return render_template('details.html', yep=yep, region=region)
#state=state, team=team, coach=coach,


#south = row["South"]
#state = row["State"]
#if state == row["South"]:
#    team = row["Team"]
#    coach = row["Coach"]
#elseif state = row["Northeast"]:
#    team
#    coach
#elseif state = row["West"]:
#    team
#    coach
#else if state = row["Midwest"]:
#    team
#    coach
#return state, team, coach
